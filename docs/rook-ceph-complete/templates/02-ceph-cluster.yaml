apiVersion: ceph.rook.io/v1
kind: CephCluster
metadata:
  name: {{ .Values.cephCluster.name }}
  namespace: {{ .Values.cephCluster.namespace }}
  labels:
    {{- include "rook-ceph-complete.labels" . | nindent 4 }}
spec:
  cephVersion:
    image: {{ .Values.cephCluster.cephVersion.image }}
    allowUnsupported: {{ .Values.cephCluster.cephVersion.allowUnsupported }}
  dataDirHostPath: {{ .Values.cephCluster.dataDirHostPath }}
  skipUpgradeChecks: {{ .Values.cephCluster.skipUpgradeChecks }}
  continueUpgradeAfterChecksEvenIfNotHealthy: {{ .Values.cephCluster.continueUpgradeAfterChecksEvenIfNotHealthy }}
  waitTimeoutForHealthyOSDInMinutes: {{ .Values.cephCluster.waitTimeoutForHealthyOSDInMinutes }}
  mon:
    count: {{ .Values.cephCluster.mon.count }}
    allowMultiplePerNode: {{ .Values.cephCluster.mon.allowMultiplePerNode }}
  mgr:
    count: {{ .Values.cephCluster.mgr.count }}
    allowMultiplePerNode: {{ .Values.cephCluster.mgr.allowMultiplePerNode }}
    {{- if .Values.cephCluster.mgr.modules }}
    modules:
    {{- range .Values.cephCluster.mgr.modules }}
    - name: {{ .name }}
      enabled: {{ .enabled }}
    {{- end }}
    {{- end }}
  dashboard:
    enabled: {{ .Values.cephCluster.dashboard.enabled }}
    ssl: {{ .Values.cephCluster.dashboard.ssl }}
  monitoring:
    enabled: {{ .Values.cephCluster.monitoring.enabled }}
  network:
    connections:
      encryption:
        enabled: {{ .Values.cephCluster.network.connections.encryption.enabled }}
      compression:
        enabled: {{ .Values.cephCluster.network.connections.compression.enabled }}
  crashCollector:
    disable: false
  logCollector:
    enabled: true
    periodicity: daily
    maxLogSize: 500M
  cleanupPolicy:
    confirmation: ""
    sanitizeDisks:
      method: quick
      dataSource: zero
      iteration: 1
    allowUninstallWithVolumes: false
  placement:
    all:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
      tolerations:
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/disk-pressure
        operator: Exists
  resources:
    mgr:
      limits:
        memory: {{ .Values.cephCluster.resources.mgr.limits.memory | quote }}
      requests:
        cpu: {{ .Values.cephCluster.resources.mgr.requests.cpu | quote }}
        memory: {{ .Values.cephCluster.resources.mgr.requests.memory | quote }}
    mon:
      limits:
        memory: {{ .Values.cephCluster.resources.mon.limits.memory | quote }}
      requests:
        cpu: {{ .Values.cephCluster.resources.mon.requests.cpu | quote }}
        memory: {{ .Values.cephCluster.resources.mon.requests.memory | quote }}
    osd:
      limits:
        memory: {{ .Values.cephCluster.resources.osd.limits.memory | quote }}
      requests:
        cpu: {{ .Values.cephCluster.resources.osd.requests.cpu | quote }}
        memory: {{ .Values.cephCluster.resources.osd.requests.memory | quote }}
  storage:
    useAllNodes: {{ .Values.cephCluster.storage.useAllNodes }}
    useAllDevices: {{ .Values.cephCluster.storage.useAllDevices }}
    config:
      osdsPerDevice: "1"
    storageClassDeviceSets:
    - name: {{ .Values.cephCluster.storage.storageClassDeviceSet.name }}
      count: {{ .Values.cephCluster.storage.storageClassDeviceSet.count }}
      portable: {{ .Values.cephCluster.storage.storageClassDeviceSet.portable }}
      tuneDeviceClass: {{ .Values.cephCluster.storage.storageClassDeviceSet.tuneDeviceClass }}
      tuneFastDeviceClass: {{ .Values.cephCluster.storage.storageClassDeviceSet.tuneFastDeviceClass }}
      encrypted: {{ .Values.cephCluster.storage.storageClassDeviceSet.encrypted }}
      # FIXED: Removed restrictive topology constraints
      placement:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - rook-ceph-osd
              topologyKey: kubernetes.io/hostname
      preparePlacement:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - rook-ceph-osd-prepare
              topologyKey: kubernetes.io/hostname
      resources:
        limits:
          memory: {{ .Values.cephCluster.resources.osd.limits.memory | quote }}
        requests:
          cpu: {{ .Values.cephCluster.resources.osd.requests.cpu | quote }}
          memory: {{ .Values.cephCluster.resources.osd.requests.memory | quote }}
      volumeClaimTemplates:
      - metadata:
          name: data
        spec:
          resources:
            requests:
              storage: {{ .Values.cephCluster.storage.storageClassDeviceSet.storageSize }}
          storageClassName: {{ .Values.cephCluster.storage.storageClassDeviceSet.storageClass }}
          volumeMode: Block
          accessModes:
          - ReadWriteOnce
  disruptionManagement:
    managePodBudgets: true
    osdMaintenanceTimeout: 30
    pgHealthCheckTimeout: 0
  healthCheck:
    daemonHealth:
      mon:
        disabled: false
        interval: 45s
      osd:
        disabled: false
        interval: 60s
      status:
        disabled: false
        interval: 60s
    livenessProbe:
      mon:
        disabled: false
      mgr:
        disabled: false
      osd:
        disabled: false